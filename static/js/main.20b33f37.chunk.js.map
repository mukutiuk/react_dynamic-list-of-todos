{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","enum/Filter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","modalTodo","setModalTodo","setIsModalActive","className","map","todo","id","completed","title","type","onClick","modalActive","classNames","TodoFilter","setFilter","setInputQuery","inputQuery","e","currentTarget","value","placeholder","onChange","target","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","finally","undefined","href","email","name","App","setTodo","All","filter","isModalActive","filterTodos","useMemo","Active","Completed","handleInput","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20b33f37.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  modalTodo: Todo | undefined,\n  setModalTodo: (todo: Todo) => void,\n  setIsModalActive: (value: boolean) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  modalTodo,\n  setModalTodo,\n  setIsModalActive,\n}) => {\n  const modalActive = (todo: Todo) => {\n    setModalTodo(todo);\n    setIsModalActive(true);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      {todos.map(todo => (\n        <tbody key={todo.id}>\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={`${todo.completed ? 'has-text-success' : 'has-text-danger'}`}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => modalActive(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far ', {\n                    'fa-eye-slash': modalTodo?.id === todo.id,\n                    'fa-eye': modalTodo?.id !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      ))}\n\n    </table>\n  );\n};\n","import { Filter } from '../../enum/Filter';\n\ntype Props = {\n  setFilter: (value: Filter) => void;\n  setInputQuery: (value: string) => void;\n  inputQuery: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  setInputQuery,\n  inputQuery,\n}) => {\n  const filterTodos = (e:React.MouseEvent<HTMLSelectElement>) => {\n    setFilter(e.currentTarget.value as Filter);\n  };\n\n  const searchInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputQuery(e.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onClick={filterTodos}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputQuery}\n          onChange={searchInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {inputQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setInputQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  modalTodo: Todo,\n  setModalTodo: (value: Todo | undefined) => void,\n  setIsModalActive: (value: boolean) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  modalTodo,\n  setIsModalActive,\n  setModalTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(modalTodo.userId).then(setUser)\n      .finally(() => setIsLoading(false));\n  }, [modalTodo]);\n\n  const delitModal = () => {\n    setModalTodo(undefined);\n    setIsModalActive(false);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {modalTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={delitModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {modalTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {modalTodo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './enum/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodo] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<Filter>(Filter.All);\n  const [inputQuery, setInputQuery] = useState('');\n  const [isModalActive, setIsModalActive] = useState(false);\n  const [modalTodo, setModalTodo] = useState<Todo | undefined>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getTodos().then(setTodo)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filterTodos = useMemo(() => {\n    const newTodo = [...todos].filter(todo => {\n      switch (filter) {\n        case Filter.Active:\n          return !todo.completed;\n        case Filter.Completed:\n          return todo.completed;\n        default:\n          return todo;\n      }\n    });\n\n    return newTodo;\n  }, [filter, todos]);\n\n  const handleInput = useMemo(() => {\n    const newTodo = filterTodos\n      .filter(todo => todo.title.toLowerCase().includes(inputQuery.toLowerCase()));\n\n    return newTodo;\n  }, [filterTodos, inputQuery]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                setInputQuery={setInputQuery}\n                inputQuery={inputQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={handleInput}\n                modalTodo={modalTodo}\n                setModalTodo={setModalTodo}\n                setIsModalActive={setIsModalActive}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {isModalActive && modalTodo\n        && (\n          <TodoModal\n            setModalTodo={setModalTodo}\n            modalTodo={modalTodo}\n            setIsModalActive={setIsModalActive}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}